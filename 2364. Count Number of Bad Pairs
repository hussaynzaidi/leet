typedef struct {
    int key;
    int value;
    UT_hash_handle hh;
} HM;

long long countBadPairs(int* nums, int numsSize) {
    long long bp;
    HM* diffCount = NULL;
    for (int i = 0; i < numsSize; i++) {
        int x = i - nums[i];
        HM* entry;
        HASH_FIND_INT(diffCount, &x, entry);
        int goodPairsCount = entry ? entry->value : 0;
        bp += (i - goodPairsCount);
        if (!entry) {
            entry = (HM*)malloc(sizeof(HM));
            entry->key = x;
            entry->value = 1;
            HASH_ADD_INT(diffCount, key, entry);
        } else {
            entry->value += 1;
        }
    }   return bp; }
