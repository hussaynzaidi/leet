int compare(const void* a, const void* b) {
    return (*(int*)a - *(int*)b);
}

int** divideArray(int* nums, int numsSize, int k, int* returnSize, int** returnColumnSizes) {
    qsort(nums, numsSize, sizeof(int), compare);

    int groups = numsSize / 3;
    int** result = (int**)malloc(groups * sizeof(int*));
    *returnColumnSizes = (int*)malloc(groups * sizeof(int));
    *returnSize = 0;

    for (int i = 0; i < numsSize; i += 3) {
        if (nums[i + 2] - nums[i] > k) {
            free(*returnColumnSizes);
            free(result);
            *returnSize = 0;
            *returnColumnSizes = NULL;
            return NULL;  // Return empty result
        }
        result[*returnSize] = (int*)malloc(3 * sizeof(int));
        result[*returnSize][0] = nums[i];
        result[*returnSize][1] = nums[i + 1];
        result[*returnSize][2] = nums[i + 2];
        (*returnColumnSizes)[*returnSize] = 3;
        (*returnSize)++;
    }

    return result;
}
