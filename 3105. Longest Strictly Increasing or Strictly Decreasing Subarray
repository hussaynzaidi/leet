int longestMonotonicSubarray(int* nums, int numsSize) {
    int max = 1;
    int currentLength = 1;
    int bit = 0; //if 0, increasing, if 1 decreasing
    for(int i=1; i< numsSize; i++)
    {
        if(nums[i -1] > nums[i])
        {
            if(bit) //was decreasing
            {
                currentLength++;
            }
            else{ //now decreasing
                if(max < currentLength) max = currentLength;
                currentLength = 2;
                bit = 1;
            }
        }
        else if(nums[i-1] < nums[i])
        {
            if(!bit) //was increasing
            {
                currentLength++;
            }
            else{   //now increasing
                if(max < currentLength) max = currentLength;
                currentLength = 2;
                bit = 0;
            }
        }
        else {//equal elements
            if(max < currentLength) max = currentLength;
                currentLength = 1;        }   
    }
    if(currentLength > max) max = currentLength;
    return max;
}
