int * parent;
int find(int i)
{
    if(parent[i] != i)
        parent[i] = find(parent[i]);
    return parent[i];
}

void unionOp(int x, int y)
{
parent[find(x)] = find(y);
}


int* findRedundantConnection(int** edges, int edgesSize, int* edgesColSize, int* returnSize) {
    parent = (int *) malloc((1010) * sizeof(int));
    for(int i = 0; i < 1010; i++)
    {
        parent[i] = i;
    }

    for(int i = 0; i < edgesSize; i++)
    {
        if(find(edges[i][0]) == find(edges[i][1]))
           {*returnSize = 2;
            return edges[i]; }
        
        unionOp(edges[i][0], edges[i][1]);
    }

    free(parent);
    return NULL;
}

